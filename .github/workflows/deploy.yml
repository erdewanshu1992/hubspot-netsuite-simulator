name: Deploy to Production

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production

env:
  NODE_ENV: production

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'production' }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Use Node.js 24.x
      uses: actions/setup-node@v4
      with:
        node-version: 24.x
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run tests
      run: npm test

    - name: Build application
      run: npm run build --if-present

    - name: Type check
      run: npx tsc --noEmit

    - name: Create deployment package
      run: |
        tar -czf app-${{ github.sha }}.tar.gz \
          --exclude=node_modules \
          --exclude=.git \
          --exclude=cypress \
          --exclude=tests \
          --exclude=.github \
          src/ package.json package-lock.json tsconfig.json

    - name: Upload deployment artifact
      uses: actions/upload-artifact@v4
      with:
        name: deployment-package-${{ github.sha }}
        path: app-${{ github.sha }}.tar.gz
        retention-days: 30

    - name: Deploy to server (example)
      run: |
        echo "Deploying to ${{ github.event.inputs.environment || 'production' }}"
        echo "Deployment package: app-${{ github.sha }}.tar.gz"
        # Add your deployment logic here:
        # - SCP/SFTP upload
        # - Docker build and push
        # - AWS/Azure/GCP deployment
        # - Heroku deployment
        # - Railway/Render deployment
      env:
        DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
        SERVER_HOST: ${{ secrets.SERVER_HOST }}

    - name: Notify deployment status
      if: always()
      run: |
        echo "Deployment to ${{ github.event.inputs.environment || 'production' }} completed"
        echo "Status: ${{ job.status }}"